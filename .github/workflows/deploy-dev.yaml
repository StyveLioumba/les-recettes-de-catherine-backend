 name: Deploy to Raspberry Pi DEV

 on:
   push:
     branches:
       - dev

   workflow_dispatch: # DÃ©clenchement manuel

 jobs:
   deploy:
     runs-on: ubuntu-latest

     environment: dev

     steps:
       # Checkout le code de la branche
       - name: Checkout repository
         uses: actions/checkout@v2

       # Injecter le fichier .env via un secret
       - name: Create .env file
         run: echo "${{ secrets.ENV }}" > ./.env

       # Copier l'image dans le serveur de dev
       - name: copy file via ssh password
         uses: appleboy/scp-action@v0.1.7
         with:
           host: ${{ secrets.PI_HOST }}
           username: ${{ secrets.PI_USER }}
           key: ${{ secrets.PI_SSH_KEY }}
           port: ${{ secrets.PI_SSH_PORT }}
           rm: true
           source: "."
           target: /home/${{ secrets.PI_USER }}/wwwroot/poc-recettes/


       # Decompresser l'image dans le serveur de dev
       - name: executing remote ssh commands using ssh-key
         uses: appleboy/ssh-action@v1.0.3
         with:
           host: ${{ secrets.PI_HOST }}
           username: ${{ secrets.PI_USER }}
           key: ${{ secrets.PI_SSH_KEY }}
           port: ${{ secrets.PI_SSH_PORT }}
           command_timeout: 30m
           script: |
               cd $HOME/wwwroot/poc-recettes/
               docker rmi technostrea/poc-recettes-backend:stable-alpine -f
               echo "# Building the docker image"
               docker build -t technostrea/poc-recettes-backend:stable-alpine .
               echo "# Demarrage du compose"
               docker compose up -d
               echo "# Suppression du dossier"
               cd $HOME/wwwroot/poc-recettes/
               find . -mindepth 1 ! -name 'db' ! -name '.env' ! -name 'compose.yaml' ! -path './db/*' -exec rm -rf {} +


